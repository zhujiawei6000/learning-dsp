/* ========================================================================== */
/*                      CFG script for the I2C sample                         */
/* ========================================================================== */

/* Load the EVM Init Library cfg file                                         */

/* load the required files and packages                                       */
var GIO 		= xdc.useModule('ti.sysbios.io.GIO');
var Task        = xdc.useModule ("ti.sysbios.knl.Task");
var BIOS        = xdc.useModule ("ti.sysbios.BIOS");
var ECM         = xdc.useModule ("ti.sysbios.family.c64p.EventCombiner");
var System      = xdc.useModule ("xdc.runtime.System");
var SysStd      = xdc.useModule('xdc.runtime.SysStd');
var cache       = xdc.useModule ("ti.sysbios.hal.Cache");
var Timestamp   = xdc.useModule ("xdc.runtime.Timestamp");
var Hwi         = xdc.useModule ("ti.sysbios.family.c64p.Hwi");
var Sem         = xdc.useModule("ti.sysbios.knl.Semaphore");
var Log 		= xdc.useModule('xdc.runtime.Log');
var LoggerBuf 	= xdc.useModule('xdc.runtime.LoggerBuf');
var Memory 		= xdc.useModule('xdc.runtime.Memory')
var SysMin 		= xdc.useModule('xdc.runtime.SysMin');
var System 		= xdc.useModule('xdc.runtime.System');
var Defaults 	= xdc.useModule('xdc.runtime.Defaults');
var Main 		= xdc.useModule('xdc.runtime.Main');
var Diags 		= xdc.useModule('xdc.runtime.Diags');

var socType 					= 	"omapl138";

/* Load the CSL package */
var devType 					= 	"omapl138";
var Csl 					    = 	xdc.useModule('ti.csl.Settings');
Csl.deviceType 					= 	devType;
Csl.useCSLIntcLib 				= 	true;

/* Load the OSAL package */
var osType = "tirtos"
var Osal = xdc.useModule('ti.osal.Settings');
Osal.osType = osType;
Osal.socType = devType;

/* Load the Board package and set the board name */
var Board = xdc.loadPackage('ti.board');
Board.Settings.boardName = "essBoard";

/* Load the uart package */
var Uart = xdc.loadPackage('ti.drv.uart');
Uart.Settings.socType = devType;


/* 
 * The BIOS module will create the default heap for the system.
 * Specify the size of this default heap.
 */
BIOS.heapSize = 0x2000;

/* System stack size (used by ISRs and Swis) */
Program.stack = 0x1000;

System.SupportProxy = SysStd;

/* 
 * Create and install logger for the whole system
 */
var loggerBufParams = new LoggerBuf.Params();
loggerBufParams.numEntries = 32;
var logger0 = LoggerBuf.create(loggerBufParams);
Defaults.common$.logger = logger0;
Main.common$.diags_INFO = Diags.ALWAYS_ON;

var iomFxns = "Upp_IOMFXNS";
var initFxn = "uppUserInit";
var deviceParams = "uppParams";
var deviceId = 0;
GIO.addDeviceMeta("/Upp0", iomFxns, initFxn, deviceId, deviceParams);

var task0Params = new Task.Params();
task0Params.priority = 5;
task0Params.instance.name = "task0";
Program.global.task0 = Task.create("&uppDemoTask", task0Params);

ECM.eventGroupHwiNum[0] = 7;
ECM.eventGroupHwiNum[1] = 8;
ECM.eventGroupHwiNum[2] = 9;
ECM.eventGroupHwiNum[3] = 10;


Program.sectMap[".text"] = "DDR";


